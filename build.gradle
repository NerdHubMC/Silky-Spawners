import java.nio.charset.StandardCharsets
import java.time.Year

plugins {
	id 'fabric-loom' version '0.2.0-SNAPSHOT'
    id "com.matthewprenger.cursegradle" version "1.1.2"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "silkyspawners"
version = project.release_version

minecraft {
    
}

repositories {
	maven { url = "https://oss.sonatype.org/content/repositories/releases/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${loader_version}"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"


    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc:fabric:${fabric_version}"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

processResources {
    // this will ensure that this task is redone when there"s a change
    inputs.property "version", project.version

    // replace stuff in fabric.mod.json, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"

        // add mod metadata
        expand "version": project.version
    }

    // copy everything else, that"s not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}
curseforge {
    if (project.hasProperty("curse_key")) {
        apiKey = findProperty("curse_key")
    }

    if (project.hasProperty("curseforge_id")) {
        project {
            id = findProperty("curseforge_id")
            mainArtifact(jar) {
                displayName = "${project.archivesBaseName} v${project.version} MC${project.minecraft_version}"
            }
            releaseType = project.release_type

            //TODO remove when MC 1.14 releases
            //usually automatically determined by the CurseGradle plugin
            addGameVersion '1.14-Snapshot'

            changelogType = "markdown"
            changelog = getChangelogText()
            
            addArtifact sourcesJar
        }
        options {
            forgeGradleIntegration = false
        }

    }
}

afterEvaluate {
    //make curseforge task depend on build
    String curseID = findProperty(curseforge_id);
    if (curseID != null) {
        tasks.each {
            if (it.name == "curseforge" + curseID) {
                it.dependsOn remapJar, remapSourcesJar
            }
        }
    }
}

String getChangelogText() {
    def changelogFile = new File(project.projectDir, "changelog.md")
    String str = ''
    if(!changelogFile.exists()) {
        System.out.println("No changelog file found, creating one at \"" + changelogFile.getAbsolutePath() + "\"")
        changelogFile.createNewFile()
        String newText = '------------------------------------------------------\n' +
                'Version ' + project.version + '\n' +
                '------------------------------------------------------\n' +
                'Additions\n' +
                '- None\n' +
                '\n' +
                'Changes\n' +
                '- None\n' +
                '\n' +
                'Bug Fixes\n' +
                '- None\n'
        String oldText = changelogFile.getText()
        changelogFile.setText(newText + oldText)
        return str
    }
    String separator = '---'
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (lineCount < 3) {
            lineCount++
            if (it.startsWith(separator)) {
                return ""
            }
        }
        if (!it.startsWith(separator)) {
            str += "$it" + (lineCount < 3 ? ':\n\n' : '\n')
            return
        }
        done = true // once we go past the first version block, parse no more
    }
    str += "\n\n see full changelog [here](" + findProperty("changelog_url") + " \"Changelog\")"
    return str
}
